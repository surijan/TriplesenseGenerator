'use strict';
var util = require('util');
var path = require('path');
var yeoman = require('yeoman-generator');
var _s = require('underscore.string');

// var defaultBuilder = require(path.resolve(__dirname, 'ts', 'builder', 'default'));

var TriplesenseGenerator = module.exports = function TriplesenseGenerator(args, options, config) {
    yeoman.generators.Base.apply(this, arguments);
    var that = this;

    this.on('end', function () {
        this.installDependencies({
            skipInstall: options['skip-install'],
            callback: function() {
                console.log(that.readFileAsString(path.join(__dirname, 'templates', 'all_installed.txt')));
            }
        });
    });

    this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));
};

util.inherits(TriplesenseGenerator, yeoman.generators.Base);

TriplesenseGenerator.prototype.askFor = function askFor() {
    var cb = this.async();

    // have Yeoman greet the user.
    console.log(this.yeoman);

    // Prompt types - see: https://github.com/SBoudrias/Inquirer.js
    var prompts = [
        {
            type: 'input',
            name: 'projectName',
            message: 'Human readable project name'
        },
        {
            type: 'input',
            name: 'projectId',
            message: 'Short, lowercase project identifier',
            default: function(previousAnswers) {
                return _s.slugify(previousAnswers.projectName)
            }
        },
        {
            type: 'input',
            name: 'clientName',
            message: 'Name of the client'
        },
        // {
        //     type: 'confirm',
        //     name: 'compass',
        //     message: 'Do you need Compass and SASS?',
        //     default: true
        // }
    ];

    this.prompt(prompts, function (props) {
        this.projectName    = props.projectName;
        this.projectId      = props.projectId;
        this.clientName     = props.clientName;
        this.version        = "0.0.1";

        cb();
    }.bind(this));
};

TriplesenseGenerator.prototype.app = function app() {
    // create dirs
    this.template('docs/template.html', 'docs/template.html');
    this.template('docs/src/index.md', 'docs/src/index.md');

    this.template('project-config.json', 'project-config.json');
    this.copy('src/sass/main.scss', 'src/sass/' + this.projectId + '.scss');
    this.copy('src/js/main.js', 'src/js/' + this.projectId + '.js');
    this.copy('src/js/vendor/modernizr.min.js', 'src/js/vendor/modernizr.min.js');

    this.mkdir('src/img');

    this.mkdir('media');
    this.mkdir('media/img');
    this.mkdir('media/json');

    this.template('src/templates/index.html', 'src/templates/index.html');
    this.template('src/templates/includes/footer.html', 'src/templates/includes/footer.html');
    this.template('src/templates/includes/header.html', 'src/templates/includes/header.html');

    this.template('_package.json', 'package.json');
    this.template('_bower.json', 'bower.json');
    this.template('_Gruntfile.js', 'Gruntfile.js');
};

TriplesenseGenerator.prototype.projectfiles = function projectfiles() {
    this.copy('editorconfig', '.editorconfig');
    this.copy('jshintrc', '.jshintrc');
};
